import boto3
import time
import logging
from botocore.exceptions import ClientError

# Configure logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

dynamodb = boto3.resource('dynamodb')
table = dynamodb.Table('YourTableName')

def get_item_with_retries(key):
    max_retries = 5
    retry_count = 0
    backoff_time = 1  # Initial backoff time in seconds

    while retry_count < max_retries:
        try:
            response = table.get_item(Key=key)
            return response['Item']
        except ClientError as e:
            if e.response['Error']['Code'] == 'ProvisionedThroughputExceededException':
                retry_count += 1
                logger.warning(f"Throttling detected. Retrying {retry_count}/{max_retries} after {backoff_time} seconds...")
                time.sleep(backoff_time)
                backoff_time *= 2  # Exponential backoff
            else:
                raise e
    raise Exception("Max retries exceeded")

# Usage
item_key = {'PrimaryKey': 'YourPrimaryKeyValue'}
try:
    item = get_item_with_retries(item_key)
    logger.info(f"Successfully retrieved item: {item}")
except Exception as e:
    logger.error(f"Failed to retrieve item: {e}")