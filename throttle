import boto3

def get_ecs_tasks_from_instance(instance_id):
    ecs_client = boto3.client('ecs')
    ec2_client = boto3.client('ec2')
    
    # List all ECS clusters
    clusters_response = ecs_client.list_clusters()
    clusters = clusters_response['clusterArns']

    # Iterate over each ECS cluster
    for cluster in clusters:
        # List container instances in the cluster
        container_instances_response = ecs_client.list_container_instances(cluster=cluster)
        container_instances = container_instances_response['containerInstanceArns']
        
        if not container_instances:
            continue
        
        # Describe the container instances to find the one matching the EC2 instance ID
        describe_response = ecs_client.describe_container_instances(cluster=cluster, containerInstances=container_instances)
        
        for container_instance in describe_response['containerInstances']:
            if container_instance['ec2InstanceId'] == instance_id:
                # List tasks running on the container instance
                task_response = ecs_client.list_tasks(cluster=cluster, containerInstance=container_instance['containerInstanceArn'])
                task_arns = task_response['taskArns']
                
                if task_arns:
                    # Describe the tasks to get details
                    tasks = ecs_client.describe_tasks(cluster=cluster, tasks=task_arns)
                    for task in tasks['tasks']:
                        print(f"Task ARN: {task['taskArn']}, Task Definition: {task['taskDefinitionArn']}")
                else:
                    print(f"No tasks found running on instance {instance_id}.")
                
                return
    
    print(f"No ECS cluster found for instance {instance_id}.")

# Replace with your instance ID
instance_id = "i-xxxxxxxxxxxxxxxxx"
get_ecs_tasks_from_instance(instance_id)